- content_for :title, "Test Execution #{@test_execution.to_param}"

- if policy(@test_version).show?
  = link_to 'Back to test', test_version_position_path(@test_version)

.block
  .pull-right
    = link_to 'Retry', test_version_test_executions_path(@test_execution.test_version), class: 'btn btn-primary', method: :post
  h1.e2e-truncate
    small.glyphicon.glyphicon-tasks
    = " #{@test_version.title}"

div data-path-done-test-execution-path=done_test_execution_path(@test_execution)
  h2
    small.glyphicon.glyphicon-film
    = " Execution ##{@test_execution.to_param}"
    |  
    - %w(done failed).each do |state|
      span class=(@test_execution.public_send("#{state}?") ? nil : 'hidden') data-execution-state=state
        = bootstrap_status_tag :span, TestExecution.states_i18n[state], state == 'done', state == 'failed'

  table.table.table-bordered#test_execution style="table-layout: fixed; white-space: normal; word-wrap: break-word;"
    tr data-target='head'
      th.text-center style='width: 200px; min-width: 200px;'
      - @test_execution.test_execution_browsers.each do |teb|
        th.text-center data-test-execution-browser-id=teb.to_param style='width: 200px; min-width: 200px;'
          span.label.label-default title=teb.browser.full_name data-toggle='tooltip' = teb.browser.name
          span.text-danger.glyphicon.glyphicon-fire title=teb.error data-toggle='tooltip' class=(teb.error.present? ? nil : 'hidden') data-target='test-execution-browser-error'
    - @test_execution.test_version.test_steps.each do |ts|
      tr data-test-step-id=ts.to_param
        th.e2e-truncate = ts.to_line
        - @test_execution.test_execution_browsers.each do |teb|
          td.text-center data-test-execution-browser-id=teb.to_param
            .state
              - %w(done failed running).each do |state|
                - if tse = teb.test_step_executions.find { |tse_| tse_.test_step_id == ts.id }
                    = link_to test_step_execution_path(tse, token: params[:token]), class: tse.public_send("#{state}?") ? nil : 'hidden', data: { state: state } do
                      = bootstrap_status_tag :span, TestExecution.states_i18n[state], state == 'done', state == 'failed'
                - else
                  = link_to 'javascript:void(0)', class: 'hidden', data: { state: state } do
                    = bootstrap_status_tag :span, TestExecution.states_i18n[state], state == 'done', state == 'failed'
            - if ts.screenshot?
              .screenshot
                - if tse = teb.test_step_executions.find { |tse_| tse_.test_step_id == ts.id }
                  - if tse.done?
                    = link_to image_tag(tse.screenshot.image.url(:thumb), width: '100%'), test_step_execution_path(tse, token: params[:token])
                  - elsif tse.failed?
                    = image_tag image_path('failed.png'), width: '100%'
                  - elsif tse.running?
                    = image_tag image_path('loading.gif'), width: '100%'

- if policy(@test_execution.test_execution_shares.build).new?
  .row
    .col-lg-4
      h3 Share the execution
      = simple_form_for [@test_execution, TestExecutionShare.new] do |f|
        = f.input :name
        div style="position:relative;"
            = f.input :expire_at, as: :string, label: 'Expire at (UTC)', placeholder: 'YYYY/MM/DD hh:mm', input_html: { data: { datetimepicker: '' } }
        = f.button :submit
    .col-lg-8
      - if @test_execution_shares.present?
        .panel.panel-default
          .panel-heading
            small.glyphicon.glyphicon-link
            |  Test Execution Share
          table.table
            tr
              th.col-lg-3.col-md-3.col-sm-3.col-xs-3 Name
              th.col-lg-4.col-md-4.col-sm-4.col-xs-4 Expire At
              th.col-lg-5.col-md-5.col-sm-5.col-xs-5 URL
            - @test_execution_shares.each do |share|
              tr
                td.e2e-middle-valign
                  = simple_form_for share, html: { class: 'form-inline hidden', id: "test_execution_share_name_#{share.to_param}" } do |f|
                    .input-group
                      = f.input_field :name, placeholder: 'Name', class: 'form-control'
                      .input-group-btn
                        button.btn.btn-default
                          span.glyphicon.glyphicon-save
                  div.e2e-switch-on-click-text data-switch-on-click="#test_execution_share_name_#{share.to_param}"
                    span = share.name.presence || '&nbsp;'.html_safe
                td.e2e-middle-valign
                  = simple_form_for share, html: { class: 'form-inline hidden', id: "test_execution_share_expire_at_#{share.to_param}" } do |f|
                    .input-group
                      = f.input_field :expire_at, as: :string, placeholder: 'YYYY/MM/DD hh:mm', data: { datetimepicker: '' }, class: 'form-control'
                      .input-group-btn
                        button.btn.btn-default
                          span.glyphicon.glyphicon-save
                  div.e2e-switch-on-click-text data-switch-on-click="#test_execution_share_expire_at_#{share.to_param}"
                    - if share.expire_at.present?
                      time datetime=share.expire_at.iso8601 data-timeago='' = share.expire_at.to_s
                    - else
                      span &nbsp;
                td.e2e-middlevalign
                  .input-group
                    = text_field_tag nil, share.test_execution_url, readonly: true, class: 'form-control', id: "test_execution_share_url_#{share.to_param}"
                    .input-group-btn
                      button.btn.btn-default title="Click to copy" data-zeroclipboard="#test_execution_share_url_#{share.to_param}"
                        span.glyphicon.glyphicon-copy

        .panel
          = link_to 'More test execution shares', test_execution_test_execution_shares_path(@test_execution)
